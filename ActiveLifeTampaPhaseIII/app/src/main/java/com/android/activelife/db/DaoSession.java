package com.android.activelife.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.android.activelife.db.ScheduleDateData;
import com.android.activelife.db.ClassData;
import com.android.activelife.db.InstructorData;
import com.android.activelife.db.ScheduleData;
import com.android.activelife.db.HoursData;
import com.android.activelife.db.LocationData;
import com.android.activelife.db.DefaultLocationData;
import com.android.activelife.db.LocationsData;
import com.android.activelife.db.MessagesData;
import com.android.activelife.db.MemberData;
import com.android.activelife.db.MessageLocationData;

import com.android.activelife.db.ScheduleDateDataDao;
import com.android.activelife.db.ClassDataDao;
import com.android.activelife.db.InstructorDataDao;
import com.android.activelife.db.ScheduleDataDao;
import com.android.activelife.db.HoursDataDao;
import com.android.activelife.db.LocationDataDao;
import com.android.activelife.db.DefaultLocationDataDao;
import com.android.activelife.db.LocationsDataDao;
import com.android.activelife.db.MessagesDataDao;
import com.android.activelife.db.MemberDataDao;
import com.android.activelife.db.MessageLocationDataDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig scheduleDateDataDaoConfig;
    private final DaoConfig classDataDaoConfig;
    private final DaoConfig instructorDataDaoConfig;
    private final DaoConfig scheduleDataDaoConfig;
    private final DaoConfig hoursDataDaoConfig;
    private final DaoConfig locationDataDaoConfig;
    private final DaoConfig defaultLocationDataDaoConfig;
    private final DaoConfig locationsDataDaoConfig;
    private final DaoConfig messagesDataDaoConfig;
    private final DaoConfig memberDataDaoConfig;
    private final DaoConfig messageLocationDataDaoConfig;

    private final ScheduleDateDataDao scheduleDateDataDao;
    private final ClassDataDao classDataDao;
    private final InstructorDataDao instructorDataDao;
    private final ScheduleDataDao scheduleDataDao;
    private final HoursDataDao hoursDataDao;
    private final LocationDataDao locationDataDao;
    private final DefaultLocationDataDao defaultLocationDataDao;
    private final LocationsDataDao locationsDataDao;
    private final MessagesDataDao messagesDataDao;
    private final MemberDataDao memberDataDao;
    private final MessageLocationDataDao messageLocationDataDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        scheduleDateDataDaoConfig = daoConfigMap.get(ScheduleDateDataDao.class).clone();
        scheduleDateDataDaoConfig.initIdentityScope(type);

        classDataDaoConfig = daoConfigMap.get(ClassDataDao.class).clone();
        classDataDaoConfig.initIdentityScope(type);

        instructorDataDaoConfig = daoConfigMap.get(InstructorDataDao.class).clone();
        instructorDataDaoConfig.initIdentityScope(type);

        scheduleDataDaoConfig = daoConfigMap.get(ScheduleDataDao.class).clone();
        scheduleDataDaoConfig.initIdentityScope(type);

        hoursDataDaoConfig = daoConfigMap.get(HoursDataDao.class).clone();
        hoursDataDaoConfig.initIdentityScope(type);

        locationDataDaoConfig = daoConfigMap.get(LocationDataDao.class).clone();
        locationDataDaoConfig.initIdentityScope(type);

        defaultLocationDataDaoConfig = daoConfigMap.get(DefaultLocationDataDao.class).clone();
        defaultLocationDataDaoConfig.initIdentityScope(type);

        locationsDataDaoConfig = daoConfigMap.get(LocationsDataDao.class).clone();
        locationsDataDaoConfig.initIdentityScope(type);

        messagesDataDaoConfig = daoConfigMap.get(MessagesDataDao.class).clone();
        messagesDataDaoConfig.initIdentityScope(type);

        memberDataDaoConfig = daoConfigMap.get(MemberDataDao.class).clone();
        memberDataDaoConfig.initIdentityScope(type);

        messageLocationDataDaoConfig = daoConfigMap.get(MessageLocationDataDao.class).clone();
        messageLocationDataDaoConfig.initIdentityScope(type);

        scheduleDateDataDao = new ScheduleDateDataDao(scheduleDateDataDaoConfig, this);
        classDataDao = new ClassDataDao(classDataDaoConfig, this);
        instructorDataDao = new InstructorDataDao(instructorDataDaoConfig, this);
        scheduleDataDao = new ScheduleDataDao(scheduleDataDaoConfig, this);
        hoursDataDao = new HoursDataDao(hoursDataDaoConfig, this);
        locationDataDao = new LocationDataDao(locationDataDaoConfig, this);
        defaultLocationDataDao = new DefaultLocationDataDao(defaultLocationDataDaoConfig, this);
        locationsDataDao = new LocationsDataDao(locationsDataDaoConfig, this);
        messagesDataDao = new MessagesDataDao(messagesDataDaoConfig, this);
        memberDataDao = new MemberDataDao(memberDataDaoConfig, this);
        messageLocationDataDao = new MessageLocationDataDao(messageLocationDataDaoConfig, this);

        registerDao(ScheduleDateData.class, scheduleDateDataDao);
        registerDao(ClassData.class, classDataDao);
        registerDao(InstructorData.class, instructorDataDao);
        registerDao(ScheduleData.class, scheduleDataDao);
        registerDao(HoursData.class, hoursDataDao);
        registerDao(LocationData.class, locationDataDao);
        registerDao(DefaultLocationData.class, defaultLocationDataDao);
        registerDao(LocationsData.class, locationsDataDao);
        registerDao(MessagesData.class, messagesDataDao);
        registerDao(MemberData.class, memberDataDao);
        registerDao(MessageLocationData.class, messageLocationDataDao);
    }
    
    public void clear() {
        scheduleDateDataDaoConfig.clearIdentityScope();
        classDataDaoConfig.clearIdentityScope();
        instructorDataDaoConfig.clearIdentityScope();
        scheduleDataDaoConfig.clearIdentityScope();
        hoursDataDaoConfig.clearIdentityScope();
        locationDataDaoConfig.clearIdentityScope();
        defaultLocationDataDaoConfig.clearIdentityScope();
        locationsDataDaoConfig.clearIdentityScope();
        messagesDataDaoConfig.clearIdentityScope();
        memberDataDaoConfig.clearIdentityScope();
        messageLocationDataDaoConfig.clearIdentityScope();
    }

    public ScheduleDateDataDao getScheduleDateDataDao() {
        return scheduleDateDataDao;
    }

    public ClassDataDao getClassDataDao() {
        return classDataDao;
    }

    public InstructorDataDao getInstructorDataDao() {
        return instructorDataDao;
    }

    public ScheduleDataDao getScheduleDataDao() {
        return scheduleDataDao;
    }

    public HoursDataDao getHoursDataDao() {
        return hoursDataDao;
    }

    public LocationDataDao getLocationDataDao() {
        return locationDataDao;
    }

    public DefaultLocationDataDao getDefaultLocationDataDao() {
        return defaultLocationDataDao;
    }

    public LocationsDataDao getLocationsDataDao() {
        return locationsDataDao;
    }

    public MessagesDataDao getMessagesDataDao() {
        return messagesDataDao;
    }

    public MemberDataDao getMemberDataDao() {
        return memberDataDao;
    }

    public MessageLocationDataDao getMessageLocationDataDao() {
        return messageLocationDataDao;
    }

}
